<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net461;netcoreapp3.1</TargetFrameworks>
    <RootNamespace>$(MSBuildProjectName)</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Configuration\defaultSettings.json" />
    <EmbeddedResource Include="Configuration\defaultSettings.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Grynwald.MarkdownGenerator" Version="2.5.34" />
    <PackageReference Include="Mono.Cecil" Version="0.11.3" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="3.1.10" />

    <!--
      Important: Keep version at 3.1.0, do not upgrade to newer versions of the 3.1.* line.
      Using later versions causes assembly load errors when MSBuild attemps to load the assemblies.
      https://github.com/ap0llo/mddocs/issues/75

      The preview version 5 of these packages does not seem to have this issue,
      so this should be revisited after the relesae of .NET 5
    -->
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="3.1.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="3.1.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.0" />
  </ItemGroup>


  <ItemGroup Label="Assembly attributes">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).Test</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>Grynwald.MdDocs.Test</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
    
  <ItemGroup>
    <Compile Include="../shared/Nullable.cs" />
  </ItemGroup>
  
  <!--
    Include Grynwald.Utilities.Configuration as source instead of using the NuGet package.
    
    Utilities.Configuration depends on a different version of Microsoft.Extensions.Configuration than this project.
    Because Microsoft.Extension.Configuration assemblies are strong-named, this can lead to assembly load errors
    on .NET Framework. Usually this can be solved using assembly binding redirects, however through MdDocs.MSBuild, 
    the assemblies are loaded into a process for which the binding redirects cannot be changed (MSBuild).
    To resolve this, the library is included as source, making it possible to build 
    everything against the same version of Microsoft.Extensions.Configuration.
  -->
  <ItemGroup>
    <Compile Include="..\..\deps\utilities\src\Utilities.Configuration\**\*.cs" />
  </ItemGroup>
    
</Project>
